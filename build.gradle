buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
  }
}

plugins {
  id 'org.jetbrains.intellij' version '0.4.9'
}

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

sourceSets {
  main {
    java.srcDir 'src'
    resources.srcDir 'resources'
  }
  test {
    java.srcDir 'test'
  }
}

intellij {
  version ideaVersion
  pluginName 'IdeaVim'
  updateSinceUntilBuild false
  downloadSources Boolean.valueOf(downloadIdeaSources)
  instrumentCode Boolean.valueOf(instrumentPluginCode)
  intellijRepo = "https://www.jetbrains.com/intellij-repository"
  if (!Boolean.valueOf(legacyNoJavaPlugin)) {
    // Since 192 version of IJ java plugin should be defined separately
    // Set `legacyNoJavaPlugin` to true if you are going to run tests under idea version < 192
    plugins = ['java']
  }

  publishPlugin {
    channels publishChannels.split(',')
    username publishUsername
    token publishToken
  }
}

repositories {
  mavenCentral()
}

dependencies {
  compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  compileOnly "org.jetbrains:annotations:17.0.0"
}

compileKotlin {
  kotlinOptions {
    jvmTarget = javaVersion
  }
}
compileTestKotlin {
  kotlinOptions {
    jvmTarget = javaVersion
  }
}

tasks.register("slackEapNotification") {
  doLast {
    if (!slackUrl) return
    def post = new URL(slackUrl).openConnection()
    def message = "{\"text\":\"New EAP released: $version\"}"
    post.setRequestMethod("POST")
    post.setDoOutput(true)
    post.setRequestProperty("Content-Type", "application/json")
    post.getOutputStream().write(message.getBytes("UTF-8"))
    def postRC = post.getResponseCode()
    println(postRC)
    if(postRC.equals(200)) {
      println(post.getInputStream().getText())
    }
  }
}
